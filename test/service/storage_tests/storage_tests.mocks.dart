// Mocks generated by Mockito 5.4.5 from annotations
// in scaibu_mutex_lock/test/service/storage_tests/storage_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:scaibu_mutex_lock/service/storage/storage_engine.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalStorageEngine].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageEngine extends _i1.Mock
    implements _i2.LocalStorageEngine {
  MockLocalStorageEngine() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> setItem<T extends _i2.StorableModel>(String? tag, T? item) =>
      (super.noSuchMethod(
            Invocation.method(#setItem, [tag, item]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setItems<T extends _i2.StorableModel>(
    String? tag,
    List<T>? items,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setItems, [tag, items]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<T?> getItem<T extends _i2.StorableModel>(
    String? tag,
    String? id,
    T Function(Map<String, dynamic>)? fromJson,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getItem, [tag, id, fromJson]),
            returnValue: _i3.Future<T?>.value(),
          )
          as _i3.Future<T?>);

  @override
  _i3.Future<List<T>> getAllItems<T extends _i2.StorableModel>(
    String? tag,
    T Function(Map<String, dynamic>)? fromJson,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllItems, [tag, fromJson]),
            returnValue: _i3.Future<List<T>>.value(<T>[]),
          )
          as _i3.Future<List<T>>);

  @override
  _i3.Future<List<T>> queryItems<T extends _i2.StorableModel>(
    String? tag,
    T Function(Map<String, dynamic>)? fromJson,
    bool Function(T)? filter,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#queryItems, [tag, fromJson, filter]),
            returnValue: _i3.Future<List<T>>.value(<T>[]),
          )
          as _i3.Future<List<T>>);

  @override
  _i3.Future<void> removeItem(String? tag, String? id) =>
      (super.noSuchMethod(
            Invocation.method(#removeItem, [tag, id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removeItems(String? tag, List<String>? ids) =>
      (super.noSuchMethod(
            Invocation.method(#removeItems, [tag, ids]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removeWhere<T extends _i2.StorableModel>(
    String? tag,
    T Function(Map<String, dynamic>)? fromJson,
    bool Function(T)? condition,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWhere, [tag, fromJson, condition]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i3.Stream<List<T>>> watchItems<T extends _i2.StorableModel>(
    String? tag,
    T Function(Map<String, dynamic>)? fromJson,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchItems, [tag, fromJson]),
            returnValue: _i3.Future<_i3.Stream<List<T>>>.value(
              _i3.Stream<List<T>>.empty(),
            ),
          )
          as _i3.Future<_i3.Stream<List<T>>>);

  @override
  _i3.Future<_i3.Stream<T?>> watchItem<T extends _i2.StorableModel>(
    String? tag,
    String? id,
    T Function(Map<String, dynamic>)? fromJson,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchItem, [tag, id, fromJson]),
            returnValue: _i3.Future<_i3.Stream<T?>>.value(
              _i3.Stream<T?>.empty(),
            ),
          )
          as _i3.Future<_i3.Stream<T?>>);

  @override
  _i3.Future<_i3.Stream<List<T>>>
  watchFilteredItems<T extends _i2.StorableModel>(
    String? tag,
    T Function(Map<String, dynamic>)? fromJson,
    bool Function(T)? filter,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchFilteredItems, [tag, fromJson, filter]),
            returnValue: _i3.Future<_i3.Stream<List<T>>>.value(
              _i3.Stream<List<T>>.empty(),
            ),
          )
          as _i3.Future<_i3.Stream<List<T>>>);

  @override
  _i3.Future<void> clearTag(String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#clearTag, [tag]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setRawData(String? tag, dynamic data) =>
      (super.noSuchMethod(
            Invocation.method(#setRawData, [tag, data]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<dynamic> getRawData(String? tag, {String? dataTag = 'data'}) =>
      (super.noSuchMethod(
            Invocation.method(#getRawData, [tag], {#dataTag: dataTag}),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<_i3.Stream<dynamic>> watchRawData(
    String? tag, {
    String? dataTag = 'data',
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watchRawData, [tag], {#dataTag: dataTag}),
            returnValue: _i3.Future<_i3.Stream<dynamic>>.value(
              _i3.Stream<dynamic>.empty(),
            ),
          )
          as _i3.Future<_i3.Stream<dynamic>>);

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
